# 🎯 VERTRAGSARTEN-SYSTEM V2 - RULE-STRUCTURE

## 📁 ERSTELLT: VOLLSTÄNDIGE RULE-DOKUMENTATION

Das **Vertragsarten-System V2** wurde vollständig dokumentiert mit folgenden Rule-Dateien:

### **📋 1. MASTERPLAN & ÜBERSICHT**
- ✅ **`vertragsarten-v2-plan.mdc`** - Detaillierter Implementierungsplan (16-21 Tage)
- ✅ **`vertragsarten-v2-overview.mdc`** - Systemübersicht mit 3 Hauptbereichen

### **🗄️ 2. DATENBANKSTRUKTUR**
- ✅ **`vertragsarten-v2-database.mdc`** - Komplettes Schema mit 11 Tabellen
  - `contracts` (Haupt-Verträge mit Versionierung)
  - `contract_terms`, `contract_pricing`, `contract_starter_packages`, `contract_flat_rates`
  - `contract_modules`, `module_categories`, `contract_module_assignments`
  - `contract_documents`, `contract_document_sections`, `contract_document_assignments`

### **🔄 3. VERSIONIERUNGS-SYSTEM**
- ✅ **`vertragsarten-v2-versioning.mdc`** - Komplette Versionierungs-Logik
  - Automatische Versionierung bei Änderungen
  - Kampagnenverträge mit zeitgesteuerter Aktivierung
  - Historien-Tracking und Änderungsnotizen
  - Parallele Versionen ohne Datenverlust

### **🧩 4. MODUL-SYSTEM**
- ✅ **`vertragsarten-v2-modules.mdc`** - Kategorisierte Module mit Icons
  - 9 Standard-Kategorien (Training, Wellness, Premium, etc.)
  - Icon-Picker mit Lucide + Custom Upload
  - Schnellzuordnung (Bulk-Assignment zu Verträgen)
  - Preisüberschreibung pro Vertrag

### **📄 5. VERTRAGSDOKUMENTE**
- ✅ **`vertragsarten-v2-documents.mdc`** - WYSIWYG-Editor + PDF-Generation
  - TinyMCE-Integration mit Custom-Buttons
  - Variable-System für dynamische Inhalte
  - Split-Screen Live-Vorschau
  - Puppeteer-basierte PDF-Generation

---

## 🔥 **SYSTEM-TRANSFORMATION: ALT → NEU**

### **VORHER (V1):**
```
contract_types (einfache Tabelle)
├── Statische Felder
├── Basis-Module über contract_type_modules
└── Keine Versionierung
```

### **NACHHER (V2):**
```
VERTRÄGE (mit Versionierung + Kampagnen)
├── Automatische Versionierung
├── Kampagnenverträge mit Zeitsteuerung
├── Preisdynamik (Stichtag, wiederholend)
├── Startpakete & Pauschalen
└── Erweiterte Rabattlogik

MODULE (kategorisiert + Icons)
├── 9 Standard-Kategorien
├── Icon-System (Lucide + Custom)
├── Schnellzuordnung (Bulk-Assignment)
└── Preisüberschreibung pro Vertrag

VERTRAGSDOKUMENTE (WYSIWYG + PDF)
├── Vollbild-Editor mit Live-Vorschau
├── Modulare Abschnitte
├── Variable-System (Stammdaten, etc.)
└── PDF-Generation mit Puppeteer
```

---

## ⚡ **IMPLEMENTIERUNGS-ROADMAP**

### **🔴 PHASE 1: INFRASTRUKTUR (3-4 Tage)**
```bash
# Datenbankstruktur
1. Migration: create_contracts_v2_schema.sql
2. Migration: migrate_contract_types_to_v2.sql  
3. Migration: create_rls_policies.sql
4. API-Layer: ContractsV2API, ModulesV2API, DocumentsAPI
```

### **🟡 PHASE 2: BUSINESS LOGIC (4-5 Tage)**
```bash
# Versionierungs-System
1. Auto-Versionierung bei Änderungen
2. Kampagnenlogik (zeitgesteuerte Aktivierung)
3. Preisdynamik-Engine (Stichtag, wiederholend)
4. Änderungsnotizen (automatisch + manuell)
```

### **🟢 PHASE 3: USER INTERFACE (5-6 Tage)**
```bash
# 3 Hauptbereiche
1. Verträge-Bereich (Übersicht + Versionierung)
2. Module-Bereich (Kategorien + Schnellzuordnung)
3. Dokumente-Bereich (WYSIWYG + PDF-Vorschau)
4. Navigation zwischen Bereichen
```

### **🔵 PHASE 4: INTEGRATION (2-3 Tage)**
```bash
# Bestehende Module anpassen
1. Mitgliedschaften: Neue Vertragsauswahl
2. Kampagnen: Kampagnenvertrag-Erstellung
3. Beratung/Leads: Aktualisierte Formulare
4. Dateimanager: Icon-Integration
```

### **⚫ PHASE 5: TESTING & ROLLOUT (2-3 Tage)**
```bash
# Validierung & Go-Live
1. Datenintegrität prüfen
2. Performance-Tests
3. Mitarbeiter-Schulung
4. Schrittweiser Rollout
```

---

## 🎯 **USERFLOWS: DIE 3 HAUPTSTRÄNGE**

### **🔸 STRANG A: VERTRÄGE**
```
Übersicht → + Neuer Vertrag → Konfiguration → Speichern
    ↓
Auto-Versionierung: v2.0 erstellt, v1.0 bleibt für Bestand aktiv
    ↓
Änderungsnotiz: "AUTO: Preise angepasst" + manuelle Ergänzung
```

### **🔸 STRANG B: MODULE**
```
Kategorien-Filter → + Modul hinzufügen → Icon & Kategorie wählen
    ↓
Schnellzuordnung: Matrix-View → Bulk-Assignment → Auto-Update aller Verträge
```

### **🔸 STRANG C: VERTRAGSDOKUMENTE**
```
Dokument-Übersicht → + Neues Dokument → Vollbild-Editor (Split-Screen)
    ↓
Abschnitte: + hinzufügen → WYSIWYG → Live-PDF-Vorschau
    ↓
Verknüpfung: Mehreren Verträgen zuordnen → Speichern
```

### **🔸 STRANG A1: KAMPAGNENVERTRÄGE**
```
Basis-Vertrag → "Kampagnenvertrag erstellen" → Anpassungen
    ↓
Zeitraum: Start/Ende-Datum → Auto-Aktivierung während Kampagne
    ↓
Nach Kampagne: Auto-Rückschaltung zu Original-Vertrag
```

---

## 🔗 **INTEGRATION MIT BESTEHENDEN MODULEN**

### **Mitgliedschaften (@mitgliedschaften)**
- Vertragsauswahl zeigt aktive Versionen + Kampagnenverträge
- Preisdynamik wird in Beitragsberechnung integriert
- Startpaket-Integration bei Vertragsabschluss

### **Kampagnen (@kampagnen)**
- Kampagnenvertrag-Erstellung aus Basis-Vertrag
- Zeitgesteuerte Aktivierung/Deaktivierung
- Verlängerungslogik mit automatischer Versionierung

### **Beratung (@beratung) & Leads**
- Aktualisierte Vertragsauswahl in Formularen
- Kampagnenverträge in Beratungsgesprächen
- Preisvorschau mit dynamischen Berechnungen

### **Dateimanager (@dateimanager)**
- Modul-Icons aus Asset-Verwaltung
- Vertragsdokument-Assets (Logos, Header)
- PDF-Template-Verwaltung

---

## 📊 **TECHNISCHE ANFORDERUNGEN**

### **Dependencies**
```json
{
  "@tinymce/tinymce-react": "^4.3.0",
  "puppeteer": "^21.0.0", 
  "html-pdf": "^3.0.1",
  "react-pdf": "^7.3.0"
}
```

### **Datenbankviews für Rückwärtskompatibilität**
```sql
CREATE VIEW contract_types AS 
SELECT ... FROM contracts WHERE is_active = true;
```

### **Performance-Optimierungen**
- Indizes für häufige Abfragen
- Stored Procedures für Bulk-Operations
- Volltext-Suche für Verträge und Module

---

## ✅ **ERFOLGSKRITERIEN**

### **Funktional**
- ✅ Alle bestehenden Verträge migriert ohne Datenverlust
- ✅ Versionierung funktioniert zuverlässig
- ✅ Kampagnenlogik arbeitet korrekt
- ✅ PDF-Generation unter 5 Sekunden

### **Performance**
- ✅ Seitenlade-Zeiten < 2 Sekunden
- ✅ Bulk-Operations unter 10 Sekunden
- ✅ Concurrent User > 50 ohne Performance-Verlust

### **User Experience**
- ✅ Intuitive Navigation zwischen 3 Bereichen
- ✅ Fehlerrate < 5% bei Vertragsenerstellung
- ✅ Positive Feedback von Mitarbeitern
- ✅ WYSIWYG-Editor funktioniert reibungslos

---

## 🚀 **READY FOR IMPLEMENTATION**

**Status:** ✅ **Vollständig dokumentiert und planungsbereit**

**Alle Rules erstellt:**
- Masterplan (16-21 Tage Roadmap)
- Datenbankschema (11 Tabellen)
- Versionierungs-System (automatisch + Kampagnen)
- Modul-System (Kategorien + Icons)
- Dokumente-System (WYSIWYG + PDF)

**Nächster Schritt:** Migration Phase 1 starten - Datenbankstruktur implementieren

---

## 📝 **NOTIZEN FÜR CURSOR**

Diese Rule-Struktur ersetzt das alte Vertragsarten-System vollständig. 
Alle Dateien sind miteinander verknüpft und bilden ein konsistentes System.

**Bei Implementierung beachten:**
- Rückwärtskompatibilität durch Views gewährleisten
- Bestehende Mitgliedschaften nicht beschädigen  
- Schrittweise Migration mit Rollback-Option
- Performance-Monitoring während Rollout