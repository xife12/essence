# üéØ VERTRAGSARTEN-SYSTEM V2 - MASTERPLAN

## üìã √úBERSICHT DER TRANSFORMATION

**Von:** Einfaches contract_types System  
**Zu:** Umfassendes Vertrags-Management mit 3 Hauptbereichen

### üîÑ NEUE STRUKTUR
1. **VERTR√ÑGE** (mit Versionierung & Kampagnenlogik)
2. **MODULE** (mit Kategorien & Schnellzuordnung)  
3. **VERTRAGSDOKUMENTE** (WYSIWYG + PDF-Vorschau)

---

## ‚ö° PHASE 1: INFRASTRUKTUR & DATENBANK (Priorit√§t: KRITISCH)

### 1.1 Datenbankstruktur
- [ ] **Migration bestehender contract_types** ‚Üí neue Struktur
- [ ] **Versionierungs-Tabellen** (contracts, contract_versions)
- [ ] **Erweiterte Preisdynamik** (contract_pricing, contract_terms)
- [ ] **Modul-System V2** (contract_modules, module_categories)
- [ ] **Vertragsdokumente** (contract_documents, document_sections)

### 1.2 Migrationsstrategie f√ºr bestehende Daten
```sql
-- Bestehende contract_types als Version 1.0 √ºbernehmen
-- Aktuelle memberships auf neue Struktur mappen
-- Modul-Zuordnungen migrieren
```

### 1.3 API-Layer
- [ ] **ContractsV2API** (CRUD + Versionierung)
- [ ] **ModulesV2API** (mit Kategorien + Schnellzuordnung)
- [ ] **ContractDocumentsAPI** (WYSIWYG + PDF-Generation)

---

## üß© PHASE 2: BUSINESS LOGIC (Priorit√§t: HOCH)

### 2.1 Versionierungs-System
- [ ] **Auto-Versionierung** bei √Ñnderungen
- [ ] **√Ñnderungsnotizen** (automatisch + manuell)
- [ ] **Aktivierungslogik** (nur eine aktive Version pro Gruppe)
- [ ] **Historien-Tracking** (wer, wann, was ge√§ndert)

### 2.2 Kampagnenvertr√§ge
- [ ] **Tempor√§re Aktivierung** w√§hrend Kampagnenlaufzeit
- [ ] **Auto-R√ºckschaltung** nach Kampagnenende
- [ ] **Verl√§ngerungslogik** f√ºr Kampagnen
- [ ] **Vererbung** von Basis-Vertragseinstellungen

### 2.3 Preisdynamik-Engine
- [ ] **Stichtag-Berechnungen** (1. Monat, manuelles Datum)
- [ ] **Wiederholende Anpassungen** (nach X Monaten)
- [ ] **Prozentuale/Feste Betr√§ge** Logik
- [ ] **Mehrere Dynamiken** pro Vertrag

---

## üé® PHASE 3: USER INTERFACE (Priorit√§t: MITTEL)

### 3.1 Vertr√§ge-Bereich
- [ ] **√úbersichtstabelle** mit Versionsanzeige
- [ ] **Versionierungs-Modal** mit √Ñnderungshistorie
- [ ] **Vertragserstellung** mit erweiterten Optionen
- [ ] **Kampagnenvertrag-Wizard** mit Vererbungslogik

### 3.2 Module-Bereich  
- [ ] **Kategorisierte Modul√ºbersicht**
- [ ] **Schnellzuordnungs-Popup** (Batch-Update)
- [ ] **Icon-Auswahl** Integration
- [ ] **Modulkonfiguration** mit Preis√ºberschreibung

### 3.3 Vertragsdokumente-Bereich
- [ ] **WYSIWYG-Editor** (TinyMCE/Tiptap)
- [ ] **Live PDF-Vorschau** (Split-Screen)
- [ ] **Abschnitts-Management** (Sortierung, Validierung)
- [ ] **Dokumentverkn√ºpfung** zu Vertr√§gen

---

## üîó INTEGRATION MIT BESTEHENDEN MODULEN

### Mitgliedschaften-Modul
- [ ] **Neue Vertragsauswahl** mit Versionsanzeige
- [ ] **Preisdynamik** in Beitragsberechnung
- [ ] **Startpaket-Integration** bei Vertragsabschluss
- [ ] **Kampagnenvertrag-Erkennung**

### Kampagnen-Modul
- [ ] **Kampagnenvertrag-Erstellung** aus Basis-Vertrag
- [ ] **Zeitgesteuerte Aktivierung/Deaktivierung**
- [ ] **Kampagnenverl√§ngerungs-Management**

### Beratung/Leads-Modul
- [ ] **Aktualisierte Vertragsauswahl** in Formularen
- [ ] **Kampagnenvertr√§ge** in Beratungsgespr√§chen
- [ ] **Preisvorschau** mit Dynamiken

### Dateimanager-Integration
- [ ] **Modul-Icons** aus Asset-Verwaltung
- [ ] **Vertragsdokument-Assets** (Logos, Bilder)
- [ ] **PDF-Template-Verwaltung**

---

## ‚ö†Ô∏è RISIKEN & ABH√ÑNGIGKEITEN

### Kritische Punkte
1. **Datenintegrit√§t:** Bestehende memberships d√ºrfen nicht besch√§digt werden
2. **Performance:** Versionierung kann bei vielen Vertr√§gen langsam werden
3. **Komplexit√§t:** Kampagnenlogik hat viele Edge Cases
4. **Migration:** Downtime minimieren bei DB-Updates

### Abh√§ngigkeiten
- **Supabase RLS-Policies** m√ºssen f√ºr neue Tabellen definiert werden
- **PDF-Generation** ben√∂tigt externe Library (puppeteer/jsPDF)
- **WYSIWYG-Editor** Integration in bestehende UI-Architektur
- **Icon-System** Erweiterung um Modul-Icons

---

## üìä ZEITSCH√ÑTZUNG

| Phase | Aufwand | Abh√§ngigkeiten |
|-------|---------|----------------|
| **Phase 1:** DB + API | 3-4 Tage | Keine |
| **Phase 2:** Business Logic | 4-5 Tage | Phase 1 vollst√§ndig |
| **Phase 3:** UI/UX | 5-6 Tage | Phase 1+2 vollst√§ndig |
| **Integration:** Module | 2-3 Tage | Alle Phasen |
| **Testing + Rollout** | 2-3 Tage | Alles |

**Gesamt: 16-21 Arbeitstage**

---

## üéØ ROLLOUT-STRATEGIE

### Stufe 1: Parallelbetrieb
- Neues System implementieren ohne alte zu deaktivieren
- Schrittweise Migration der Daten
- A/B Testing mit ausgew√§hlten Nutzern

### Stufe 2: Sanfte Migration  
- Redirect von alten URLs zu neuen
- Datenabgleich und Validierung
- Schulung der Mitarbeiter

### Stufe 3: Vollst√§ndiger Umstieg
- Deaktivierung alter Routen
- Cleanup alter Datenbankstrukturen
- Performance-Monitoring

---

## ‚úÖ ERFOLGSKRITERIEN

1. **Funktional:**
   - Alle bestehenden Vertr√§ge migriert ohne Datenverlust
   - Versionierung funktioniert zuverl√§ssig
   - Kampagnenlogik arbeitet korrekt

2. **Performance:**
   - Seitenlade-Zeiten < 2 Sekunden
   - PDF-Generation < 5 Sekunden  
   - Bulk-Operations unter 10 Sekunden

3. **User Experience:**
   - Intuitive Navigation zwischen 3 Bereichen
   - Fehlerrate < 5% bei Vertragsenerstellung
   - Positive Feedback von Mitarbeitern

---

## üîÑ N√ÑCHSTE SCHRITTE

1. **SOFORT:** Detaillierte Rules erstellen
2. **Tag 1:** Datenbankschema finalisieren + Migration testen
3. **Tag 2:** API-Layer implementieren
4. **Tag 3:** Versionierungs-Logik entwickeln
5. **Tag 4:** Erste UI-Prototypen

**Status:** üöÄ Ready to Start