---
description:
globs:
alwaysApply: false
---
## Modul: Dateimanager (file_asset) - Erweitert mit Versionsverwaltung

### Zweck
Zentrale Dateiablage und Medienverwaltung mit strukturierter Zuordnung nach Kategorien, Kampagnen, Arbeitsbereichen und Dateitypen. Erweitert um vollst√§ndige Versionsverwaltung mit √Ñnderungsprotokoll und modulbasierte virtuelle Ordnerstruktur. Dient als Quelle f√ºr alle Uploads in Kampagnen, Ma√ünahmen, Landingpages und Mitarbeiterprozesse.

---

### Entit√§t: file_asset (Haupttabelle)

| Feld                 | Typ       | Beschreibung |
|---|-----|-----|
| id                   | UUID      | Prim√§rschl√ºssel |
| filename             | TEXT      | Urspr√ºnglicher Dateiname |
| file_url             | TEXT      | Speicherpfad (z. B. Supabase Storage) |
| category             | ENUM      | 'image', 'graphic', 'document', 'print', 'template', 'web', 'video' |
| type                 | TEXT      | Unterkategorie wie 'flyer', 'logo', 'testimonial', 'hero-banner' |
| work_area            | ENUM      | 'Trainer', 'Rezeption', 'Service', 'Verwaltung', 'Studioleitung' |
| campaign_id          | UUID      | (optional) Verkn√ºpfung zu campaign.id |
| module_reference     | ENUM      | 'system', 'campaign', 'landingpage', 'task', 'contentplaner' |
| is_print_ready       | BOOLEAN   | true = finale Druckdatei |
| tags                 | TEXT[]    | Freie Schlagworte |
| description          | TEXT      | Beschreibung oder Einsatzzweck |
| created_by           | UUID      | Uploader (Mitarbeiter) |
| created_at           | TIMESTAMP | Upload-Datum |
| updated_at           | TIMESTAMP | Letzte √Ñnderung |
| visibility           | ENUM      | 'public', 'staff_only', 'admin_only' |
| is_hidden_from_staff | BOOLEAN   | Staff-Sichtbarkeit |
| allowed_roles        | TEXT[]    | Berechtigte Rollen |
| current_version_id   | UUID      | FK ‚Üí file_versions.id (aktuelle Version) |

---

### Entit√§t: file_versions (Versionsverwaltung)

| Feld               | Typ       | Beschreibung |
|---|-----|-----|
| id                 | UUID      | Prim√§rschl√ºssel |
| file_asset_id      | UUID      | FK ‚Üí file_asset.id |
| version_number     | INTEGER   | Versionsnummer (automatisch) |
| file_url           | TEXT      | Speicherpfad dieser Version |
| filename           | TEXT      | Dateiname dieser Version |
| file_size          | BIGINT    | Dateigr√∂√üe in Bytes |
| version_description| TEXT      | Beschreibung der √Ñnderungen |
| changelog          | TEXT      | Detailliertes √Ñnderungsprotokoll |
| uploaded_by        | UUID      | FK ‚Üí staff.id |
| created_at         | TIMESTAMP | Upload-Zeitpunkt |

---

### Entit√§t: staff_file_permissions (Berechtigungsmatrix)

| Feld               | Typ       | Beschreibung |
|---|-----|-----|
| id                 | UUID      | Prim√§rschl√ºssel |
| staff_id           | UUID      | FK ‚Üí staff.id |
| upload_permission  | ENUM      | 'none', 'basic', 'advanced', 'admin' |
| can_see_admin_files| BOOLEAN   | Admin-Dateien sichtbar |
| created_at         | TIMESTAMP | Erstellung |
| updated_at         | TIMESTAMP | √Ñnderung |

---

### Virtuelle Ordnerstruktur (modulbasiert)

Das System generiert automatisch eine intelligente Ordnerstruktur basierend auf `module_reference`:

#### Ordner-Hierarchie:
```
üìÅ Dateimanager
‚îú‚îÄ‚îÄ üîß System
‚îÇ   ‚îú‚îÄ‚îÄ üìÑ Dokumente
‚îÇ   ‚îú‚îÄ‚îÄ üñºÔ∏è Bilder
‚îÇ   ‚îî‚îÄ‚îÄ üñ®Ô∏è Druck
‚îú‚îÄ‚îÄ üì¢ Kampagnen
‚îÇ   ‚îú‚îÄ‚îÄ [Kampagnenname]
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÑ Dokumente
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üñºÔ∏è Bilder
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ üñ®Ô∏è Druck
‚îÇ   ‚îî‚îÄ‚îÄ Allgemein
‚îú‚îÄ‚îÄ üåê Landingpages
‚îÇ   ‚îú‚îÄ‚îÄ üñºÔ∏è Bilder
‚îÇ   ‚îú‚îÄ‚îÄ üì∫ Videos
‚îÇ   ‚îî‚îÄ‚îÄ üìÑ Dokumente
‚îú‚îÄ‚îÄ ‚úÖ Aufgaben
‚îÇ   ‚îú‚îÄ‚îÄ üìã Checklisten
‚îÇ   ‚îú‚îÄ‚îÄ üìÑ Briefings
‚îÇ   ‚îî‚îÄ‚îÄ üñºÔ∏è Grafiken
‚îî‚îÄ‚îÄ üìÖ Contentplaner
    ‚îú‚îÄ‚îÄ üì± Social Media
    ‚îú‚îÄ‚îÄ üìß E-Mail
    ‚îî‚îÄ‚îÄ üìÑ Blog
```

#### Pfad-Generierung (getVirtualPath):
1. **Hauptordner**: Bestimmt durch `module_reference`
2. **Unterordner**: Spezifische Kampagne (bei campaign) oder "Allgemein"
3. **Kategorie**: Basierend auf `category`
4. **Arbeitsbereich**: Nur bei System-Dateien relevant

---

### Versionsverwaltung - Features

#### Automatische Versionierung:
- Jede neue Datei startet mit Version 1
- Upload neuer Versionen erh√∂ht automatisch die Versionsnummer
- `current_version_id` zeigt immer auf die neueste Version

#### Version-Management UI:
- üìã **Version-Badge**: Zeigt aktuelle Versionsnummer (z.B. "üìã v3")
- **Versionshistorie**: Vollst√§ndige Liste aller Versionen mit Changelog
- **Version-Kommentare**: Beschreibung der √Ñnderungen bei Upload
- **Download-Historie**: Alle Versionen bleiben downloadbar

#### Funktionen:
```typescript
// Neue Version hochladen
uploadNewVersion(fileId, file, versionDescription, changelog)

// Versionen abrufen
getFileVersions(fileId)

// Aktuelle Versionsnummer ermitteln
getCurrentVersionNumber(fileId)
```

---

### UI/UX Flows (Erweitert)

#### 1. Upload-Prozess:
1. **Upload starten**: "‚ûï Neue Datei" Button
2. **Datei-Upload**: Drag & Drop oder Dateiauswahl + Live-Vorschau
3. **Kategorisierung**:
   - Kategorie ausw√§hlen (Dropdown mit Icons)
   - Dynamische Unterfelder je nach Kategorie
4. **Modulzuordnung**:
   - üîß System, üì¢ Kampagne, üåê Landingpage, ‚úÖ Aufgabe, üìÖ Contentplaner
   - Bei Kampagne: Spezifische Kampagne ausw√§hlbar
5. **Metadaten**:
   - Arbeitsbereich (Multi-Select)
   - Tags (mit Enter-Taste und ‚ûï/‚ûñ Buttons)
   - Beschreibung
   - Sichtbarkeit und Berechtigungen
6. **Speichern**: Automatische Ordner-Zuordnung

#### 2. Version-Upload:
1. **Version hinzuf√ºgen**: Button in Datei-Detailansicht
2. **Neue Datei hochladen**: Ersetzt aktuelle Version
3. **√Ñnderungskommentar**: Pflichtfeld f√ºr Versionsbeschreibung
4. **Changelog**: Detaillierte √Ñnderungsliste (optional)
5. **Automatische Versionierung**: System erh√∂ht Versionsnummer

#### 3. Ordner-Navigation:
1. **Breadcrumb-Navigation**: üè† Dateimanager > Ordner > Unterordner
2. **Ordner-Icons**: Visuelle Unterscheidung der Module
3. **Datei-Z√§hler**: Anzahl Dateien pro Ordner (inkl. Unterordner)
4. **Zur√ºck-Navigation**: Ein-Klick zur√ºck zum √úberordner

#### 4. Erweiterte Suche:
- **Globale Suche**: Durchsucht alle Dateien modul√ºbergreifend
- **Filter-Panel**: Nach Kategorie, Modul, Arbeitsbereich, Druckstatus
- **Tag-Suche**: Schnellfilter nach Tags
- **Kampagnen-Filter**: Dateien einer spezifischen Kampagne

---

### Status-Badge-System

#### Badge-Typen mit Styling:
```typescript
StatusBadge Types:
- üìã **Version**: "v2" (cyan)
- üåê **Sichtbarkeit**: "√ñffentlich", "Team", "Admin" (gr√ºn/blau/rot)
- üìç **Arbeitsbereich**: "Trainer", "Rezeption" etc. (lila)
- üñ®Ô∏è **Druckstatus**: "Druckfertig", "Entwurf" (gr√ºn/orange)
- üéØ **Kampagne**: Kampagnenname (indigo)
```

#### Badge-Verhalten:
- Grid-Ansicht: Kompakte Darstellung, max. 3 Badges sichtbar
- Listen-Ansicht: Vollst√§ndige Badge-Anzeige
- Tooltip: Zus√§tzliche Informationen bei Hover

---

### Datenbank-Logik & Constraints

#### RLS (Row Level Security):
```sql
-- Sichtbarkeit basierend auf Rolle und visibility
CREATE POLICY file_asset_visibility ON file_asset FOR SELECT
USING (
  visibility = 'public' OR
  (visibility = 'staff_only' AND auth.role() IN ('staff', 'admin')) OR
  (visibility = 'admin_only' AND auth.role() = 'admin')
);
```

#### Automatische Trigger:
```sql
-- Version-Update Trigger
CREATE OR REPLACE FUNCTION update_current_version()
RETURNS TRIGGER AS $$
BEGIN
  UPDATE file_asset 
  SET current_version_id = NEW.id
  WHERE id = NEW.file_asset_id;
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;
```

#### Enum-Validierung:
- Leere Strings werden zu NULL konvertiert (Frontend-Verarbeitung)
- Alle ENUMs haben Default-Werte
- Validierung verhindert ung√ºltige Enum-Werte

---

### API-Funktionen (Erweitert)

#### Basis-Operationen:
```typescript
// Dateien abrufen (mit Filtern)
getFileAssets(filters: FileFilterOptions): Promise<FileAsset[]>

// Datei hochladen
uploadFileAsset(file: File, metadata: FileMetadata): Promise<FileAsset>

// Datei bearbeiten
updateFileAsset(id: string, updates: Partial<FileAsset>): Promise<FileAsset>

// Datei l√∂schen (inklusive aller Versionen)
deleteFileAsset(id: string): Promise<void>
```

#### Versions-Operationen:
```typescript
// Neue Version hochladen
uploadNewVersion(
  fileId: string, 
  file: File, 
  versionDescription: string,
  changelog?: string
): Promise<FileVersion>

// Versionen abrufen
getFileVersions(fileId: string): Promise<FileVersion[]>

// Version l√∂schen
deleteFileVersion(versionId: string): Promise<void>
```

#### Kampagnen-Integration:
```typescript
// Kampagnen f√ºr Dropdown
getCampaigns(): Promise<Campaign[]>

// Dateien einer Kampagne
getFilesByCampaign(campaignId: string): Promise<FileAsset[]>
```

---

### Berechtigungsmatrix

| Rolle        | Upload | Bearbeiten | L√∂schen | Admin-Dateien | Versionierung |
|---|-----|---|---|---|-----|
| **Admin**    | ‚úÖ Alle | ‚úÖ Alle     | ‚úÖ Alle  | ‚úÖ Ja          | ‚úÖ Vollzugriff |
| **Studioleiter** | ‚úÖ Eigene | ‚úÖ Eigene | ‚úÖ Eigene | üî∂ Teilweise | ‚úÖ Eigene |
| **Mitarbeiter** | ‚úÖ Basic | ‚úÖ Eigene | ‚ùå Nein | ‚ùå Nein | ‚úÖ Eigene |

#### Upload-Berechtigungen:
- **Basic**: System, eigene Dateien
- **Advanced**: + Kampagnen, Aufgaben
- **Admin**: Alle Module, alle Berechtigungen

---

### Performance-Optimierungen

#### Caching:
- **Version-Cache**: Map<fileId, versionNumber> f√ºr schnelle Anzeige
- **Kampagnen-Cache**: Statische Liste f√ºr Dropdown
- **Ordnerstruktur-Cache**: Einmalige Berechnung bei Laden

#### Lazy Loading:
- Versionsnummern werden asynchron nachgeladen
- Gro√üe Dateien mit Progressbar
- Infinite Scrolling bei vielen Dateien

#### Indizierung:
```sql
-- Performance-Indices
CREATE INDEX idx_file_asset_module_ref ON file_asset(module_reference);
CREATE INDEX idx_file_asset_campaign ON file_asset(campaign_id);
CREATE INDEX idx_file_asset_category ON file_asset(category);
CREATE INDEX idx_file_versions_asset ON file_versions(file_asset_id);
```

---

### Integration mit anderen Modulen

#### Kampagnen-Modul:
- Direkte Datei-Zuordnung √ºber `campaign_id`
- Kampagnen-spezifische Ordnerstruktur
- Asset-Auswahl in Kampagnen-Aktionen

#### Landingpages-Modul:
- Hero-Bilder, Icons, Videos einbindbar
- Responsive Bild-Optimierung
- SEO-optimierte Alt-Tags

#### Aufgaben-Modul:
- PDF-Checklisten als Anh√§nge
- Grafische Briefings
- Arbeitsanweisungen mit Bildern

#### Contentplaner-Modul:
- Social Media Assets
- E-Mail-Attachments
- Blog-Bilder und Videos

---

### Monitoring & Analytics

#### System-Metriken:
- Storage-Verbrauch pro Modul
- Upload-H√§ufigkeit pro Nutzer
- Versions-Statistiken
- Download-Tracking

#### Berichte:
- Monatlicher Storage-Report
- Datei-Aktivit√§ts-Log
- Versions-Audit-Trail
- Berechtigungs-√úbersicht

---

### Backup & Archivierung

#### Automatische Backups:
- T√§gliche Snapshots aller Versionen
- S3-basierte Langzeitarchivierung
- Disaster-Recovery Prozeduren

#### Archivierung:
- Alte Versionen nach 1 Jahr archivieren
- L√∂sch-Schutz f√ºr wichtige Dateien
- Compliance-konforme Aufbewahrung

---

### Zuk√ºnftige Erweiterungen

#### Geplante Features:
- **OCR-Integration**: Texterkennung in PDFs
- **Auto-Tagging**: AI-basierte Tag-Generierung
- **Duplikat-Erkennung**: Automatische Erkennung √§hnlicher Dateien
- **Workflow-Integration**: Genehmigungsprozesse f√ºr kritische Dateien
- **API-Webhooks**: Benachrichtigungen bei Datei-√Ñnderungen

#### Skalierung:
- CDN-Integration f√ºr globale Verf√ºgbarkeit
- Multi-Tenant-Architektur
- Advanced Search mit Elasticsearch
- Machine Learning f√ºr Content-Kategorisierung
